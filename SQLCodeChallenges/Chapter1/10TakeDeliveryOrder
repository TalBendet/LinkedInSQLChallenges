-- Goal: create an order, find the customer, create the order record, add items to the order, find the total cost
-- Name: Loretta Hundey
-- Address: 6939 Elka Place
-- Items: House Salad, Mini Cheeseburgers, Tropical Blue Smoothie
SELECT * FROM Orders;

SELECT * FROM OrdersDishes;


-- Retrieve the CustomerID based on the given info
SELECT CustomerID FROM Customers
    WHERE FirstName = 'Loretta' AND LastName = 'Hundey' AND Address = '6939 Elka Place';

-- Use the selected CustomerID to create an order in the Order table
INSERT INTO Orders (CustomerID, OrderDate)
    VALUES ((SELECT CustomerID FROM Customers
    WHERE FirstName = 'Loretta' AND LastName = 'Hundey' AND Address = '6939 Elka Place'), CURRENT_TIMESTAMP);

-- Get the OrderID from the Orders table
SELECT OrderID FROM Orders
WHERE OrderID = (SELECT max(OrderID) FROM Orders);

-- Get the DishID of all dish
SELECT DishID, Name FROM Dishes
WHERE Name IN ('House Salad', 'Mini Cheeseburgers', 'Tropical Blue Smoothie');

-- Insert House Salad to OrdersDishes table
INSERT INTO OrdersDishes (OrderID, DishID)
    VALUES ((SELECT OrderID FROM Orders
                WHERE OrderID = (SELECT max(OrderID) FROM Orders)),
            (SELECT DishID FROM Dishes
                WHERE Name IN ('House Salad')));

-- Insert Mini Cheeseburgers to OrdersDishes table
INSERT INTO OrdersDishes (OrderID, DishID)
    VALUES ((SELECT OrderID FROM Orders
                WHERE OrderID = (SELECT max(OrderID) FROM Orders)),
            (SELECT DishID FROM Dishes
                WHERE Name IN ('Mini Cheeseburgers')));
                
-- Insert Tropical Blue Smoothies to OrdersDishes table
INSERT INTO OrdersDishes (OrderID, DishID)
    VALUES ((SELECT OrderID FROM Orders
                WHERE OrderID = (SELECT max(OrderID) FROM Orders)),
            (SELECT DishID FROM Dishes
                WHERE Name IN ('Tropical Blue Smoothie')));

-- Can also add all values in one insert into query

SELECT * FROM OrdersDishes;

--Display the delivery order info with total price
--Display the order items info as a view
SELECT o.OrderID, o.DishID, d.Name, d.Price
FROM OrdersDishes AS o
JOIN Dishes AS d
    ON o.DishID = d.DishID
WHERE o.OrderID = (SELECT ord.OrderID FROM Orders AS ord
                        WHERE ord.OrderID = (SELECT max(OrderID) FROM Orders));
                        

CREATE VIEW orderPrices AS
    SELECT o.OrderID, o.DishID, d.Name, d.Price
    FROM OrdersDishes AS o
    JOIN Dishes AS d
        ON o.DishID = d.DishID
        ;

SELECT * FROM orderPrices;

-- Display the customer info with the total price
SELECT o.orderID, c.FirstName, c.LastName, c.Email, sum(op.Price) AS "Total Price"
FROM Orders AS o
JOIN orderPrices AS op ON o.OrderID = op.OrderID
JOIN Customers AS c ON o.CustomerID = c.CustomerID
WHERE o.OrderID = ((SELECT max(OrderID) FROM Orders)); 

