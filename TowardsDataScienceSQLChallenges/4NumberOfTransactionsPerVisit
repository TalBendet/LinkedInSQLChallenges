-- Goal: write a query to count the total number of transactions that each unique visit (user_id, visit_date) performed.
--         Then aggregate the total for each number of transactions. In other words, find how many visits did 0 transactions,
--         how many did 1 transaction, etc.


-- The recursive CTE generates a list of all the potential values for the transaction count (starting with the highest transaction count and going to 0)
-- That list is then joined to a query that generates the amount of transactions per visit

WITH RECURSIVE Transactions_Per_Visit AS 
    (SELECT v.user_id, v.visit_date, COALESCE(COUNT(t.transaction_date),0) AS transaction_count
     FROM Visits AS v
     LEFT JOIN Transactions AS t
        ON v.user_id = t.user_id AND v.visit_date = t.transaction_date
     GROUP BY v.user_id, v.visit_date),
 List_Of_Transaction_Numbers AS (
                      SELECT MAX(transaction_count) as trans_value
                        FROM Transactions_Per_Visit
                      UNION ALL
                      SELECT trans_value-1 
                        FROM List_Of_Transaction_Numbers
                      WHERE trans_value >= 1)
SELECT ln.trans_value AS "Transaction Count", COALESCE(COUNT(transaction_count),0) AS "Number of Visits"
FROM List_Of_Transaction_Numbers AS ln
LEFT JOIN Transactions_Per_Visit AS tv
    ON ln.trans_value = tv.transaction_count
GROUP BY ln.trans_value; 